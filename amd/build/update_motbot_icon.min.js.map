{"version":3,"sources":["../src/update_motbot_icon.js"],"names":["init","motbotid","contextid","wasHappy","getState","state","setIcon","fetch","response","json","icon","getIcon","src","document","querySelector"],"mappings":"2cA+BO,GAAMA,CAAAA,CAAI,4CAAG,WAAOC,CAAP,CAAiBC,CAAjB,CAA4BC,CAA5B,wGACAC,CAAAA,CAAQ,CAACH,CAAD,CAAWC,CAAX,CADR,QACdG,CADc,QAGlBC,CAAO,CAACD,CAAD,CAAQF,CAAR,CAAP,CAHkB,wCAAH,uDAAV,C,iBAcQC,CAAAA,C,2EAAf,WAAwBH,CAAxB,CAAkCC,CAAlC,wGACuBK,CAAAA,KAAK,CACxB,6CACEN,CADF,CAEE,aAFF,CAGEC,CAJsB,CAD5B,QACMM,CADN,uBAOeA,CAAAA,CAAQ,CAACC,IAAT,EAPf,iF,kCAeA,QAASH,CAAAA,CAAT,CAAiBD,CAAjB,CAAwBF,CAAxB,CAAkC,IAC5BO,CAAAA,CAAI,CAAGC,CAAO,EADc,CAKhC,GAAIR,CAAQ,EAAIE,CAAhB,CAAuB,CACrB,GAAIA,CAAJ,CAAW,CACTK,CAAI,CAACE,GAAL,CALc,0BAMf,CAFD,IAEO,CACLF,CAAI,CAACE,GAAL,CANgB,kCAOjB,CACF,CACF,CAMD,QAASD,CAAAA,CAAT,EAAmB,CACjB,MAAOE,CAAAA,QAAQ,CAACC,aAAT,CAAuB,+BAAvB,CACR,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_motbot\n * @copyright  2021, Pascal HÃ¼rten <pascal.huerten@th-luebeck.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import {exception as displayException} from 'core/notification';\n// import Templates from 'core/templates';\n\n/**\n * Get MotBot state and update MotBot icon if necessary.\n *\n * @param {num} motbotid\n * @param {num} contextid\n * @param {bool} wasHappy\n */\nexport const init = async (motbotid, contextid, wasHappy) => {\n  let state = await getState(motbotid, contextid);\n\n  setIcon(state, wasHappy);\n};\n\n/**\n * Get the current MotBot State.\n *\n * @param {num} motbotid\n * @param {num} contextid\n *\n * @returns {Promise<bool>}\n */\nasync function getState(motbotid, contextid) {\n  let response = await fetch(\n    '/mod/motbot/get_motbot_state.php?motbotid=' +\n      motbotid +\n      '&contextid=' +\n      contextid\n  );\n  return await response.json();\n}\n\n/**\n * Get the current MotBot State.\n * @param {bool} state\n * @param {bool} wasHappy\n */\nfunction setIcon(state, wasHappy) {\n  let icon = getIcon();\n  const happyIcon = '/mod/motbot/pix/icon.svg';\n  const unhappyIcon = '/mod/motbot/pix/icon-unhappy.svg';\n\n  if (wasHappy != state) {\n    if (state) {\n      icon.src = happyIcon;\n    } else {\n      icon.src = unhappyIcon;\n    }\n  }\n}\n\n/**\n * Get the currently displayed MotBot icon.\n * @returns {Element}\n */\nfunction getIcon() {\n  return document.querySelector('.motbot .activityinstance img');\n}\n"],"file":"update_motbot_icon.min.js"}